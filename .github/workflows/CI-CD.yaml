name: CI / CD Pipeline
run-name: ${{ github.actor }} is Deploying 

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.ref_type == 'tag' && github.ref_name || github.sha }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push auth microservice
        uses: docker/build-push-action@v6
        with:
          context: "backend/auth"
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/auth:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/auth:latest

      - name: Build and push discounts microservice
        uses: docker/build-push-action@v6
        with:
          context: "backend/discounts"
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/discounts:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/discounts:latest

      - name: Build and push items microservice
        uses: docker/build-push-action@v6
        with:
          context: "backend/items"
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/items:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/items:latest

      - name: Build and push client microservice
        uses: docker/build-push-action@v6
        with:
          context: "client"
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/client:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/client:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.32.0/2024-12-20/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin
          mv ./kubectl $HOME/bin/kubectl
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

      - name: Generate the final deployment templates
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext-base

          # Define image names for each service
          export AUTH_IMAGE="docker.io/${{ secrets.DOCKER_USERNAME }}/restaurantry-auth:${{ env.IMAGE_TAG }}"
          export DISCOUNTS_IMAGE="docker.io/${{ secrets.DOCKER_USERNAME }}/restaurantry-discounts:${{ env.IMAGE_TAG }}"
          export ITEMS_IMAGE="docker.io/${{ secrets.DOCKER_USERNAME }}/restaurantry-items:${{ env.IMAGE_TAG }}"
          export CLIENT_IMAGE="docker.io/${{ secrets.DOCKER_USERNAME }}/restaurantry-client:${{ env.IMAGE_TAG }}"

          # Replace placeholders in deployment templates
          envsubst < auth-backend-deployment.yaml > auth-backend-deployment.yaml
          envsubst < client-frontend-deployment.yaml > client-frontend-deployment.yaml
          envsubst < discount-backend-deployment.yaml > discount-backend-deployment.yaml

          # Debugging: Print final deployment files
          echo "Final auth-backend-deployment.yaml:"
          cat auth-backend-deployment.yaml
          echo "Final auth-backend-deployment.yaml:"
          cat auth-backend-deployment.yaml
          echo "Final auth-backend-deployment.yaml:"
          cat auth-backend-deployment.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f .